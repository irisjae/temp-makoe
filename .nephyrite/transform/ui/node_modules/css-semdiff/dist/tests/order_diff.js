"use strict";
var assert = require("assert");
var css = require("css");
var order_diff_1 = require("../order_diff");
var collection_utils_1 = require("../collection_utils");
describe("orderDiff", function () {
    it("should return empty result when no differences exist between specified 2 StyleSheets", function () {
        var styleSheetA = css.parse("a {} b {}");
        var styleSheetB = css.parse("a {} b {}");
        var results = order_diff_1.orderDiff(styleSheetA, styleSheetB);
        assertDiffHasSelectors(results, []);
    });
    it("should return empty result when no common rules exist between specified 2 StyleSheets", function () {
        var styleSheetA = css.parse("a {}");
        var styleSheetB = css.parse("b {}");
        var results = order_diff_1.orderDiff(styleSheetA, styleSheetB);
        assertDiffHasSelectors(results, []);
    });
    it("should return selectors with the uptrend selectors and downtrend selectors " +
        "when the difference exist between specified 2 StyleSheets", function () {
        var styleSheetA = css.parse("a {} b {}");
        var styleSheetB = css.parse("b {} a {}");
        var results = order_diff_1.orderDiff(styleSheetA, styleSheetB);
        assertDiffHasSelectors(results, ["a", "b"]);
        var resultForA = results["a"];
        assert.deepEqual(resultForA, { uptrends: ["b"], downtrends: [] });
        var resultForB = results["b"];
        assert.deepEqual(resultForB, { uptrends: [], downtrends: ["a"] });
    });
    it("should return only changed selectors with the uptrend selectors and " +
        "downtrend selectors when the difference exist between specified 2 StyleSheets", function () {
        var styleSheetA = css.parse("a {} b {} c {}");
        var styleSheetB = css.parse("b {} a {} c {}");
        var results = order_diff_1.orderDiff(styleSheetA, styleSheetB);
        assertDiffHasSelectors(results, ["a", "b"]);
        var resultForA = results["a"];
        assert.deepEqual(resultForA, { uptrends: ["b"], downtrends: [] });
        var resultForB = results["b"];
        assert.deepEqual(resultForB, { uptrends: [], downtrends: ["a"] });
    });
});
function assertDiffHasSelectors(results, selectors) {
    assert.deepEqual(collection_utils_1.keys(results), selectors);
}
