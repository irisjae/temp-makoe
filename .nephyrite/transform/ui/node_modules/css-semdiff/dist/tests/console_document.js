"use strict";
var assert = require("assert");
var console_document_1 = require("../format/console_document");
describe("ConsoleDocument", function () {
    describe(".format", function () {
        [
            {
                document: [],
                expected: "",
            },
            {
                document: ["line1"],
                expected: "line1",
            },
            {
                document: ["line1", "line2"],
                expected: "line1\nline2",
            },
            {
                document: ["line1", ["line2-1"]],
                expected: "line1\n  line2-1",
            },
            {
                document: ["line1", ["line2-1", "line2-2"]],
                expected: "line1\n  line2-1\n  line2-2",
            },
            {
                // Empty document should be ignored
                document: ["line1", [], "line2"],
                expected: "line1\nline2",
            },
        ].forEach(function (testCase) {
            context("when given " + pretty(testCase.document), function () {
                it("should return " + pretty(testCase.expected), function () {
                    var result = console_document_1.ConsoleDocument.format(testCase.document);
                    assert.strictEqual(result, testCase.expected);
                });
            });
        });
    });
    describe(".concat", function () {
        [
            {
                documents: [],
                expected: [],
            },
            {
                documents: [
                    ["doc1"],
                ],
                expected: ["doc1"],
            },
            {
                documents: [
                    ["doc1"],
                    ["doc2"],
                ],
                expected: ["doc1", "doc2"],
            },
            {
                documents: [
                    ["doc1"],
                    [["doc2-1"]],
                ],
                expected: ["doc1", ["doc2-1"]],
            },
        ].forEach(function (testCase) {
            context("when given " + pretty(testCase.documents), function () {
                it("should return " + pretty(testCase.expected), function () {
                    var result = console_document_1.ConsoleDocument.concat(testCase.documents);
                    assert.deepStrictEqual(result, testCase.expected);
                });
            });
        });
    });
    describe(".append", function () {
        [
            {
                appended: [],
                appendant: [],
                expected: [[]],
            },
            {
                appended: [],
                appendant: ["appendant1"],
                expected: [["appendant1"]],
            },
            {
                appended: [["appended1"]],
                appendant: ["appendant1"],
                expected: [["appended1"], ["appendant1"]],
            },
        ].forEach(function (testCase) {
            context("when given " + pretty(testCase.appended) + " + " + pretty(testCase.appendant), function () {
                it("should return " + pretty(testCase.expected), function () {
                    var result = console_document_1.ConsoleDocument.append(testCase.appended, testCase.appendant);
                    assert.deepStrictEqual(result, testCase.expected);
                });
            });
        });
    });
    describe(".intersperse", function () {
        [
            {
                separator: ["sep"],
                documents: [],
                expected: [],
            },
            {
                separator: ["sep"],
                documents: [["doc1"]],
                expected: [["doc1"]],
            },
            {
                separator: ["sep"],
                documents: [["doc1"], ["doc2"]],
                expected: [["doc1"], ["sep"], ["doc2"]],
            },
            {
                separator: ["sep"],
                documents: [["doc1"], ["doc2"], ["doc3"]],
                expected: [["doc1"], ["sep"], ["doc2"], ["sep"], ["doc3"]],
            },
        ].forEach(function (testCase) {
            context(("when given separator = " + pretty(testCase.separator) + ", ") +
                ("documents = " + pretty(testCase.documents)), function () {
                it("should return " + pretty(testCase.expected), function () {
                    var result = console_document_1.ConsoleDocument.intersperse(testCase.separator, testCase.documents);
                    assert.deepStrictEqual(result, testCase.expected);
                });
            });
        });
    });
});
function pretty(doc) {
    return JSON.stringify(doc);
}
