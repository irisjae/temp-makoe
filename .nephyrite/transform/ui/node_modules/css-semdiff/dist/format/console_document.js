"use strict";
var collection_utils_1 = require("../collection_utils");
var string_utils_1 = require("../string_utils");
var ConsoleDocument;
(function (ConsoleDocument) {
    function format(doc) {
        return formatRecursively(doc, 0);
    }
    ConsoleDocument.format = format;
    function toArray(doc) {
        return doc;
    }
    ConsoleDocument.toArray = toArray;
    function formatRecursively(doc, indentLevel) {
        var indent = string_utils_1.repeat("  ", indentLevel);
        return toArray(doc)
            .filter(function (x) {
            if (typeof x === "string") {
                return true;
            }
            else {
                // Ignore empty arrays
                return x.length > 0;
            }
        })
            .map(function (x) {
            if (typeof x === "string") {
                return "" + indent + x;
            }
            else {
                return formatRecursively(x, indentLevel + 1);
            }
        })
            .join("\n");
    }
    function concat(docs) {
        return Array.prototype.concat.apply([], docs);
    }
    ConsoleDocument.concat = concat;
    function append(docs, doc) {
        return docs.concat([doc]);
    }
    ConsoleDocument.append = append;
    function intersperse(sep, docs) {
        if (docs.length <= 0) {
            return [];
        }
        var _a = collection_utils_1.uncons(docs), x = _a[0], xs = _a[1];
        return xs.reduce(function (result, doc) {
            return append(append(result, sep), doc);
        }, [x]);
    }
    ConsoleDocument.intersperse = intersperse;
})(ConsoleDocument = exports.ConsoleDocument || (exports.ConsoleDocument = {}));
